unit Clothes.Classes;

interface

type
  TClothesType = class
  private
    FName: string;
    FID: Integer;
    procedure SetID(const Value: Integer);
    procedure SetName(const Value: string);
  public
    property ID: Integer read FID write SetID;
    property Name: string read FName write SetName;
  end;

  TClothes = class
  private
    FName: string;
    FID: Integer;
    FClothesType: TClothesType;
    FSerialNo: string;
    procedure SetID(const Value: Integer);
    procedure SetName(const Value: string);
    procedure SetSerialNo(const Value: string);
  public
    property ID: Integer read FID; // write SetID;
    property Name: string read FName; // write SetName;
    property SerialNo: string read FSerialNo; // write SetSerialNo;
    property ClothesType: TClothesType read FClothesType;
    constructor Create(const AID: Integer; const AName: string; const ASerialNo: string; AClothesType: TClothesType);
  end;

implementation

{ ClotheType }

procedure TClothesType.SetID(const Value: Integer);
begin
  FID := Value;
end;

procedure TClothesType.SetName(const Value: string);
begin
  FName := Value;
end;

{ TClothe }

constructor TClothes.Create(const AID: Integer; const AName: string; const ASerialNo: string; AClothesType: TClothesType);
begin
  inherited Create;
  FID := AID;
  FName := AName;
  FSerialNo := ASerialNo;
  FClothesType := AClothesType;
end;

procedure TClothes.SetID(const Value: Integer);
begin
  FID := Value;
end;

procedure TClothes.SetName(const Value: string);
begin
  FName := Value;
end;

procedure TClothes.SetSerialNo(const Value: string);
begin
  FSerialNo := Value;
end;

end.
